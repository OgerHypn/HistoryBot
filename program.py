import telebot
from config import *
import os
from mg import get_map_cell


bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add('–ê—É–¥–∏–æ 11 –∫–ª–∞—Å—Åüìö')
    markup.add('–ï–ì–≠üéì')
    markup.add('YouTubeüì±')
    markup.add('–ü–µ—Ä–µ–≤–æ–¥ –±–∞–ª–ª–æ–≤üßÆ')
    markup.add('–ò–≥—Ä—ãüéÆ')
    markup.add(('–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ãüìú'))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É YouTube:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '10 –ö–ª–∞—Å—Å ¬´–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
def HR10(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è")
    bot.send_chat_action(message.chat.id, 'upload_document')
    document = open("Uchebnik/–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏ 10 –∫–ª–∞—Å—Å –ú–µ–¥–∏–Ω—Å–∫–∏–π.pdf", "rb")
    bot.send_document(message.chat.id, document)
    document.close()
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –Ω–∞ üíØ, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å–æ –≤—Å–µ–º —É—á–µ–±–Ω–∏–∫–∞–º")


@bot.message_handler(func=lambda message: message.text == '10 –ö–ª–∞—Å—Å ¬´–í—Å–µ–æ–±—â–∞—è –ò—Å—Ç–æ—Ä–∏—è¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
def HR10(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è")
    bot.send_chat_action(message.chat.id, 'upload_document')
    document = open("Uchebnik/–í—Å–µ–æ–±—â–∞—è –ò—Å—Ç–æ—Ä–∏—è 10 –∫–ª–∞—Å—Å –ú–µ–¥–∏–Ω—Å–∫–∏–π.pdf", "rb")
    bot.send_document(message.chat.id, document)
    document.close()
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –Ω–∞ üíØ, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å–æ –≤—Å–µ–º —É—á–µ–±–Ω–∏–∫–∞–º")


@bot.message_handler(func=lambda message: message.text == '11 –ö–ª–∞—Å—Å ¬´–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
def HR11(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è")
    bot.send_chat_action(message.chat.id, 'upload_document')
    document = open("Uchebnik/–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏, 11 –∫–ª–∞—Å—Å, –ú–µ–¥–∏–Ω—Å–∫–∏–π.pdf", "rb")
    bot.send_document(message.chat.id, document)
    document.close()
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –Ω–∞ üíØ, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å–æ –≤—Å–µ–º —É—á–µ–±–Ω–∏–∫–∞–º")

@bot.message_handler(func=lambda message: message.text == '11 –ö–ª–∞—Å—Å ¬´–í—Å–µ–æ–±—â–∞—è –ò—Å—Ç–æ—Ä–∏—è¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
def VH11(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è")
    bot.send_chat_action(message.chat.id, 'upload_document')
    document = open("Uchebnik/–í—Å–µ–æ–±—â–∞—è –∏—Å—Ç–æ—Ä–∏—è, 11 –∫–ª–∞—Å—Å, –ú–µ–¥–∏–Ω—Å–∫–∏–π.pdf", "rb")
    bot.send_document(message.chat.id, document)
    document.close()
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –Ω–∞ üíØ, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å–æ –≤—Å–µ–º —É—á–µ–±–Ω–∏–∫–∞–º")


@bot.message_handler(func=lambda m: m.text == '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ãüìú')
def Library(message):
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add('‚èé')
    markup.add('11 –ö–ª–∞—Å—Å ¬´–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
    markup.add('11 –ö–ª–∞—Å—Å ¬´–í—Å–µ–æ–±—â–∞—è –ò—Å—Ç–æ—Ä–∏—è¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
    markup.add('10 –ö–ª–∞—Å—Å ¬´–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
    markup.add('10 –ö–ª–∞—Å—Å ¬´–í—Å–µ–æ–±—â–∞—è –ò—Å—Ç–æ—Ä–∏—è¬ª –ú–µ–¥–∏–Ω—Å–∫–∏–π')
    bot.send_message(message.chat.id, "–£—á–µ–±–Ω–∏–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —à–∫–æ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã", reply_markup=markup)



@bot.message_handler(func=lambda m: m.text == '–ò–≥—Ä—ãüéÆ')
def game(message):
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add('‚èé')
    markup.add('–õ–∞–±–∏—Ä–∏–Ω—Çüß±')
    bot.send_message(message.chat.id, "–í—Å–∫–æ—Ä–µ –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—Å—è –µ—â—ë –∏–≥—Ä—ã", reply_markup=markup)

cols, rows = 8, 8

keyboard = telebot.types.InlineKeyboardMarkup()
keyboard.row( telebot.types.InlineKeyboardButton('‚Üê', callback_data='left'),
			  telebot.types.InlineKeyboardButton('‚Üë', callback_data='up'),
			  telebot.types.InlineKeyboardButton('‚Üì', callback_data='down'),
			  telebot.types.InlineKeyboardButton('‚Üí', callback_data='right') )

maps = {}

def get_map_str(map_cell, player):
    map_str = ""
    for y in range(rows * 2 - 1):
        for x in range(cols * 2 - 1):
            if map_cell[x + y * (cols * 2 - 1)]:
                map_str += "‚¨õ"
            elif (x, y) == player:
                map_str += "üî¥"
            else:
                map_str += "‚¨ú"
        map_str += "\n"

    return map_str

@bot.message_handler(func=lambda m: m.text == '–õ–∞–±–∏—Ä–∏–Ω—Çüß±')
def play_message(message):
    map_cell = get_map_cell(cols, rows)

    user_data = {
		'map': map_cell,
		'x': 0,
		'y': 0
	}

    maps[message.chat.id] = user_data

    bot.send_message(message.from_user.id, get_map_str(map_cell, (0, 0)), reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def callback_func(query):
	user_data = maps[query.message.chat.id]
	new_x, new_y = user_data['x'], user_data['y']

	if query.data == 'left':
		new_x -= 1
	if query.data == 'right':
		new_x += 1
	if query.data == 'up':
		new_y -= 1
	if query.data == 'down':
		new_y += 1

	if new_x < 0 or new_x > 2 * cols - 2 or new_y < 0 or new_y > rows * 2 - 2:
		return None
	if user_data['map'][new_x + new_y * (cols * 2 - 1)]:
		return None

	user_data['x'], user_data['y'] = new_x, new_y

	if new_x == cols * 2 - 2 and new_y == rows * 2 - 2:
		bot.edit_message_text( chat_id=query.message.chat.id,
							   message_id=query.message.id,
							   text="–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏" )
		return None

	bot.edit_message_text( chat_id=query.message.chat.id,
						   message_id=query.message.id,
						   text=get_map_str(user_data['map'], (new_x, new_y)),
						   reply_markup=keyboard )



@bot.message_handler(func=lambda m: m.text == '–ü–µ—Ä–µ–≤–æ–¥ –±–∞–ª–ª–æ–≤üßÆ')
def calculator(message):
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add('‚èé')
    markup.add('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—å', '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', '–§–∏–∑–∏–∫–∞')
    markup.add('–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', '–ò—Å—Ç–æ—Ä–∏—è', '–ë–∏–æ–ª–æ–≥–∏—è')
    markup.add('–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–•–∏–º–∏—è', '–ê–Ω–≥–ª–∏—Å–∫–∏–π —è–∑—ã–∫')
    markup.add('–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', '–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫')

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=markup)


@bot.message_handler(func=lambda m: m.text == '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—å'or m.text == '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫' or m.text == '–§–∏–∑–∏–∫–∞' or m.text == '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ' or m.text == '–ò—Å—Ç–æ—Ä–∏—è' or m.text == '–ë–∏–æ–ª–æ–≥–∏—è' or \
                      m.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞' or m.text == '–•–∏–º–∏—è' or m.text == '–ê–Ω–≥–ª–∏—Å–∫–∏–π —è–∑—ã–∫' or m.text == '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞' or m.text == '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è' or m.text == '–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫')
def ball(message):
    Predmet = message.text
    file_path = f"ZD History/{Predmet}.jpg"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
    with open(file_path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo)

@bot.message_handler(func=lambda message: message.text == '–ï–ì–≠üéì')
def EGE(message):
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add('‚èé')
    markup.add('üéÅ')
    for i in range(1, 22):
        markup.add(str(i) + Task)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ: ", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text.endswith('–ó–∞–¥–∞–Ω–∏–µ'))
def Histori_exc(message):
    task_number = message.text.split(Task)[0]  # –ü–æ–ª—É—á–∞–µ–º —Ü–∏—Ñ—Ä—É –ø–µ—Ä–µ–¥ —Å–∏–º–≤–æ–ª–æ–º '‚ùì'

    # –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –æ—Ç–¥–µ–ª–µ–Ω–Ω–æ–π —Ü–∏—Ñ—Ä–æ–π
    file_path = f"ZD History/{task_number}.jpg"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
    with open(file_path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo)


    word_file_path = f"ZD History/{task_number}.docx"
    pdf_file_path = f"ZD History/{task_number}.pdf"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª docx
    if os.path.exists(word_file_path):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª Word
        with open(word_file_path, 'rb') as docx:
            bot.send_document(message.chat.id, docx)
    else:
        if os.path.exists(pdf_file_path):
            with open(pdf_file_path, 'rb') as pdf:
                bot.send_document(message.chat.id, pdf)
        else:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª docx –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(message.chat.id, "")
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ –∑–∞–¥–∞–Ω–∏–µ
        points = ball_dicts.get(task_number, '0')



        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±–∞–ª–ª–æ–≤
        bot.send_message(message.chat.id, f"–ó–∞ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–±—Ä–∞—Ç—å {points} –±–∞–ª–ª–æ–≤. –ù–∞ —Ñ–æ—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è, –∞ –≤ —Ñ–∞–π–ª–µ –¥–∞–Ω–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è")


@bot.message_handler(func=lambda message: message.text == 'üéÅ')
def Podarok(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∫–∞ üéÅ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è")
    bot.send_chat_action(message.chat.id, 'upload_document')
    document = open("Podarok/–ê—Ä—Ç–∞—Å–æ–≤ 2023.pdf", "rb")
    bot.send_document(message.chat.id, document)
    document.close()
    bot.send_message(message.chat.id, "–û—á–µ–Ω—å –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º, –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ üíØ")


@bot.message_handler(func=lambda message: message.text == '10 –∫–ª–∞—Å—Å' or message.text == '–ê—É–¥–∏–æ 11 –∫–ª–∞—Å—Åüìö')
def select_paragraph(message):
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add('‚èé')
    for i in range(1, 38):
        markup.add(str(i))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '‚èé')
def reply_to_start(message):
    start(message)


@bot.message_handler(func=lambda message: message.text == 'YouTubeüì±')
def open_youtube_channel(message):
    channel_name = "HistoryAudio"
    channel_link = "https://www.youtube.com/channel/UCEVp2mDLT_n74xQGeAlF7bQ"
    channel_description = "HistoryAudio - —ç—Ç–æ –∫–∞–Ω–∞–ª, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—Ä–∏–∏. –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ –ø–æ —É—á–µ–±–Ω–∏–∫—É. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã —É–∑–Ω–∞–≤–∞—Ç—å –æ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ!"

    text = f"üì∫ –ö–∞–Ω–∞–ª {channel_name}\n\n{channel_description}\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {channel_link}"
    bot.send_message(message.chat.id, text)


@bot.message_handler(func=lambda message: message.text.isdigit() and (int(message.text) > 0 and int(message.text) < 37))
def send_video_test(message):
        paragraph_number = message.text
        if paragraph_number in video_links:
            video_link = video_links[paragraph_number]
            bot.send_message(message.chat.id, f"–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: {video_link}")
        else:
            bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        if paragraph_number in test_links:
            test_link = test_links[paragraph_number]
            bot.send_message(message.chat.id, f"{test_link}")
        else:
            bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")





bot.polling(none_stop=False, interval=0)
